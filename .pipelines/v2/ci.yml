trigger:
  batch: true
  branches:
    include:
      - main
      - stable
#  paths:
#    exclude:
#      - doc/*
#      - temp/*
#      - tools/*
#      - '**.md'

pr:
  branches:
    include:
      - main
      - stable
#  paths:
#    exclude:
#      - '**.md'
#      - doc

resources:
  repositories:
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

name: $(BuildDefinitionName)_$(date:yyMM).$(date:dd)$(rev:rrr)

parameters:
  - name: buildPlatforms
    type: object
    default:
      - x64
  - name: enableMsBuildCaching
    type: boolean
    displayName: "Enable MSBuild Caching"
    default: false
  - name: runTests
    type: boolean
    displayName: "Run Tests"
    default: false
  - name: useVSPreview
    type: boolean
    displayName: "Build Using Visual Studio Preview"
    default: false

extends:
  template: v1/1ES.Unofficial.PipelineTemplate.yml@1esPipelines
  parameters:
    pool:
      name: SHINE-INT-S
      ${{ if eq(parameters.useVSPreview, true) }}:
        demands: ImageOverride -equals SHINE-VS17-Preview
      ${{ else }}:
        image: SHINE-VS17-Latest
      os: windows
    sdl:
      tsa:
        enabled: true
        configFile: '$(Build.SourcesDirectory)\.pipelines\tsa.json'
        
    stages:
      - stage: Build
        jobs:
          - template: .pipelines/v2/templates/job-build-project.yml@self
            parameters:
              pool:
                name: SHINE-INT-L
                ${{ if eq(parameters.useVSPreview, true) }}:
                  demands: ImageOverride -equals SHINE-VS17-Preview
                ${{ else }}:
                  image: SHINE-VS17-Latest
                os: windows
              variables:
                IsPipeline: 1 # The installer uses this to detect whether it should pick up localizations
                SkipCppCodeAnalysis: 1 # Skip the code analysis to speed up release CI. It runs on PR CI, anyway
              buildPlatforms: ${{ parameters.buildPlatforms }}
              enableMsBuildCaching: ${{ parameters.enableMsBuildCaching }}
              publishArtifacts: false
              runTests: ${{ parameters.runTests }}
              useVSPreview: ${{ parameters.useVSPreview }}
      - stage: Fuzz
        dependsOn: Build
        jobs:
          - template: .pipelines/v2/templates/job-fuzz.yml@self
            parameters:
              platform: "x64" #For fuzzing test use x64 platform only for now
              configuration: Release
              inputArtifactStem: ""
